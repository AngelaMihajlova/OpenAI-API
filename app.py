import streamlit as st
from openai import OpenAI
from dotenv import load_dotenv
import os

# –í—á–∏—Ç–∞—ò API key
load_dotenv()
client = OpenAI(api_key=os.getenv("OPENAI_API_KEY"))

st.set_page_config(page_title="AI Chatbot", page_icon="ü§ñ")

st.title("ü§ñ AI Chatbot —Å–æ OpenAI API")

# –ö–æ–ø—á–µ –∑–∞ —á–∏—Å—Ç–µ—ö–µ –Ω–∞ —Ä–∞–∑–≥–æ–≤–æ—Ä–æ—Ç
if st.button("üóëÔ∏è –ò–∑–±—Ä–∏—à–∏ –∏—Å—Ç–æ—Ä–∏—ò–∞"):
    st.session_state["messages"] = [
        {"role": "system", "content": "–¢–∏ —Å–∏ –∞—Å–∏—Å—Ç–µ–Ω—Ç –∫–æ—ò –æ–¥–≥–æ–≤–∞—Ä–∞ –∫—Ä–∞—Ç–∫–æ –∏ —ò–∞—Å–Ω–æ."}
    ]
    st.rerun()  # ‚úÖ –Ω–æ–≤–∞—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—ò–∞

# –ß—É–≤–∞—ò –∏—Å—Ç–æ—Ä–∏—ò–∞ –≤–æ session_state
if "messages" not in st.session_state:
    st.session_state["messages"] = [
        {"role": "system", "content": "–¢–∏ —Å–∏ –∞—Å–∏—Å—Ç–µ–Ω—Ç –∫–æ—ò –æ–¥–≥–æ–≤–∞—Ä–∞ –∫—Ä–∞—Ç–∫–æ –∏ —ò–∞—Å–Ω–æ."}
    ]

# –ü—Ä–∏–∫–∞–∂–∏ —ò–∞ –∏—Å—Ç–æ—Ä–∏—ò–∞—Ç–∞
for msg in st.session_state["messages"]:
    if msg["role"] == "user":
        with st.chat_message("user"):
            st.markdown(msg["content"])
    elif msg["role"] == "assistant":
        with st.chat_message("assistant"):
            st.markdown(msg["content"])

# –ü–æ–ª–µ –∑–∞ –≤–Ω–µ—Å—É–≤–∞—ö–µ –ø–æ—Ä–∞–∫–∞
if prompt := st.chat_input("–ù–∞–ø–∏—à–∏ –ø–æ—Ä–∞–∫–∞..."):
    st.session_state["messages"].append({"role": "user", "content": prompt})
    with st.chat_message("user"):
        st.markdown(prompt)

    # –ü–æ–≤–∏–∫ –¥–æ OpenAI
    response = client.chat.completions.create(
        model="gpt-4o-mini",
        messages=st.session_state["messages"]
    )
    answer = response.choices[0].message.content

    st.session_state["messages"].append({"role": "assistant", "content": answer})
    with st.chat_message("assistant"):
        st.markdown(answer)
